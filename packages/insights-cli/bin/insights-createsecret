#!/usr/bin/env node

var fs = require('fs')
var path = require('path')
var program = require('commander')
var root = path.join(__dirname, '..')
var pkg = require(path.join(root, 'package.json'))
var randomString = require('../lib/random-string')

program.version(pkg.version)
  .usage('[options]')
  .description('Create a new authentication secret')
  .option('--secret [path]', 'Where to store the authentication secret. Defaults to ~/.insights/secret')
  .parse(process.argv)

const secretPath = program.secret || path.join(require('os').homedir(), '.insights', 'secret')

let folder = secretPath.split(path.sep)
folder.pop()
const folderPath = folder.join(path.sep)
try {
  fs.mkdirSync(folderPath, { recursive: true })
} catch (error) {
  console.error(`Fatal Error! Could not create folder ${folderPath}`)
  process.exit(1)
}

try {
  fs.writeFileSync(secretPath, randomString(64), 'utf8')
  console.log(`New authentication secret stored at ${secretPath}`)
} catch (error) {
  console.error(`Fatal Error! Could not write authentication secret at ${secretPath}`)
  process.exit(1)
}
