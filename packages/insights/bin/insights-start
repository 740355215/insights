#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const program = require('commander')
const root = path.join(__dirname, '..')
const pkg = require(path.join(root, 'package.json'))

program.version(pkg.version)
  .usage('<command> [options]')
  .description('Start insights frontend and API server')
  .option('-p, --port [number]', 'Run on specified port - defaults to 8000')
  .option('-H, --host [host]', 'Host name or IP address to listen on - defaults to 127.0.0.1')
  .option('--public-url [URL]', 'URL used in webapp - defaults to http://$HOST:$PORT')
  .option('--static-root [path]', 'Folder for the insights web build - defaults to $NODE_MODULES/insights/web-build')
  .option('--config [path]', 'Insights config folder - default searched in order: ".insights", "insights", "config/insights"')
  .option('--data [path]', 'Path to the local NeDB database - defaults to $CONFIG/data')
  .option('--secret [path]', 'Path to the authentication secret - defaults to $CONFIG/secret')


program.parse(process.argv)
//
// // no config folder path given
// if (program.config) {
//   process.env.INSIGHTS_CONFIG = program.config
//
// } else {
//   const currentPath = process.cwd()
//   console.log(currentPath)
//
// }
//
//
//
//
// // const configSearchPaths =
// //   path.join(__dirname, '..', '..', 'insights-api', 'config')
// // ]
//
//
// if (fs.existsSync(path)) {
//
// }
//
//

process.env.NODE_ENV = 'production'
process.env.NODE_CONFIG_DIR = path.join(__dirname, '..', '..', 'insights-api', 'config')

process.env.INSIGHTS_CONFIG = path.join(require('os').homedir(), '.insights')
process.env.INSIGHTS_DATA = program.data || process.env.INSIGHTS_DATA || path.join(process.env.INSIGHTS_CONFIG, 'data')

const secretPath = program.secret || path.join(process.env.INSIGHTS_CONFIG, 'secret')

try {
  const secret = fs.readFileSync(secretPath, 'utf8').trim()
  if (secret.length < 64) {
    console.error(`Fatal Error! Read secret at ${secretPath} was less than 64 characters long!`)
    process.exit(1)
  }
  process.env.AUTHENTICATION_SECRET = secret
} catch (error) {
  console.error(`Fatal Error! Could not find authentication secret at ${secretPath}`)
  process.exit(1)
}

const startInsights = require('../app/start')

startInsights({
  port: program.port,
  host: program.host,
  publicUrl: program.publicUrl,
  staticRoot: program.staticRoot,
})


