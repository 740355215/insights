#!/usr/bin/env node

// Thanks to https://github.com/mysamai/mysam/blob/master/bin/mysam for this script!

var fs = require('fs')
var path = require('path')
var program = require('commander')
var root = path.join(__dirname, '..')
var pkg = require(path.join(root, 'package.json'))

program.version(pkg.version)
  .usage('<command> [options]')
  .description('Run insights server')
  .option('-p, --port [number]', 'Port in server mode. Defaults to 3030')
  .option('--data [folder]', 'Where to store the local NeDB database. Defaults to ~/.insights/data')
  .option('--secret [path]', 'Where to store the authentication secret. Defaults to ~/.insights/secret')
  .option('-d --develop', 'Run in development mode')

program.parse(process.argv)

process.env.NODE_ENV = program.develop ? 'development' : 'production'
process.env.NODE_CONFIG_DIR = path.join(__dirname, '..', 'config')
process.env.INSIGHTS_DATA = program.data || path.join(require('os').homedir(), '.insights', 'data')

const secretPath = program.secret || path.join(require('os').homedir(), '.insights', 'secret')

try {
  const secret = fs.readFileSync(secretPath, 'utf8').trim()
  if (secret.length < 64) {
    console.error(`Fatal Error! Read secret at ${secretPath} was less than 64 characters long!`)
    process.exit(1)
  }
  process.env.AUTHENTICATION_SECRET = secret
} catch (error) {
  console.error(`Fatal Error! Could not find authentication secret at ${secretPath}`)
  process.exit(1)
}

if (program.port) {
  process.env.INSIGHTS_PORT = program.port
}

require('../app')
